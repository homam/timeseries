// Generated by CoffeeScript 1.6.2
(function() {
  var exports;

  exports = exports != null ? exports : this;

  exports.barChart = function() {
    var chart, devMap, height, margin, nameMap, valueMap, width, x0, xAxis, y, yAxis;

    margin = {
      top: 20,
      right: 0,
      bottom: 20,
      left: 70
    };
    width = 720 - margin.left - margin.right;
    height = 300 - margin.top - margin.bottom;
    x0 = d3.scale.ordinal().rangeRoundBands([0, width], .1);
    y = d3.scale.linear().range([height, 0]);
    xAxis = d3.svg.axis().scale(x0).orient('bottom');
    yAxis = d3.svg.axis().scale(y).orient('left').tickFormat(d3.format(',')).tickSize(-width, 0, 0);
    nameMap = function(d) {
      return d.name;
    };
    valueMap = function(d) {
      return d.value;
    };
    devMap = function(d) {
      return d.stdev;
    };
    chart = function(selection) {
      return selection.each(function() {
        var $svg, $xAxis, $yAxis;

        $svg = d3.select(this).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', "translate(" + margin.left + "," + margin.top + ")");
        $xAxis = $svg.append('g').attr('class', 'x axis').attr("transform", "translate(0," + height + ")");
        $yAxis = $svg.append('g').attr('class', 'y axis');
        chart.draw = function(data) {
          var $main, $rect, keys;

          keys = _.flatten(data.map(nameMap));
          x0.domain(keys);
          y.domain([0, d3.max(data.map(valueMap))]);
          $main = $svg.selectAll('.main').data(data);
          $main.enter().append('g').attr('class', 'main').append('rect').attr('class', 'conv');
          $main.transition().duration(200);
          $rect = $main.select('rect.conv');
          $rect.transition().duration(200).attr('width', x0.rangeBand()).attr('x', function(d) {
            return x0(nameMap(d));
          }).attr('y', function(d) {
            return y(valueMap(d));
          }).attr('height', function(d) {
            return height - y(valueMap(d));
          }).style('fill', function(d, i) {
            return '#ff7f0e';
          });
          $main.exit().select('rect').attr('y', 0).attr('height', 0);
          $xAxis.transition().duration(200).call(xAxis);
          return $yAxis.transition().duration(200).call(yAxis);
        };
        return null;
      });
    };
    chart.height = function(val) {
      height = val != null ? val : height;
      return chart;
    };
    return chart;
  };

}).call(this);
