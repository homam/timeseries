// Generated by CoffeeScript 1.6.2
(function() {
  define(['../common/property'], function(Property) {
    return function() {
      var chart, height, margin, properties, width, x, xAxis, y, yAxis;

      margin = {
        top: 20,
        right: 40,
        bottom: 20,
        left: 50
      };
      width = 720;
      height = 300;
      x = d3.time.scale();
      y = d3.scale.linear();
      xAxis = d3.svg.axis().scale(x).orient('bottom');
      yAxis = d3.svg.axis().scale(y).orient('left');
      properties = {
        width: new Property(function(value) {
          width = value - margin.left - margin.right;
          yAxis.tickSize(-width, 0, 0);
          return x.range([0, width]);
        }),
        height: new Property(function(value) {
          height = value - margin.top - margin.bottom;
          xAxis.tickSize(-height, 0, 0);
          return y.range([height, 0]);
        }),
        margin: new Property(function(value) {
          margin = _.extend(margin, value);
          properties.width.reset();
          return properties.height.reset();
        }),
        x: new Property,
        y: new Property,
        yDomain: new Property,
        transitionDuration: new Property,
        tooltip: new Property
      };
      properties.width.set(width);
      properties.height.set(height);
      properties.yDomain.set(function(ys) {
        return [0, d3.max(ys)];
      });
      properties.transitionDuration.set(500);
      chart = function(selection) {
        return selection.each(function(data) {
          var $g, $gEnter, $selection, $svg, $xAxis, $yAxis, line, transitionDuration, xMap, yMap;

          xMap = properties.x.get();
          yMap = properties.y.get();
          x.domain(d3.extent(data.map(xMap)));
          y.domain(properties.yDomain.get()(data.map(yMap)));
          $selection = d3.select(this);
          $svg = $selection.selectAll('svg').data([data]);
          $gEnter = $svg.enter().append('svg').append('g');
          $svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);
          $g = $svg.select('g').attr('transform', "translate(" + margin.left + "," + margin.top + ")");
          $gEnter.append('g').attr('class', 'x axis');
          $xAxis = $svg.select('.x.axis').attr("transform", "translate(0," + height + ")");
          $gEnter.append('g').attr('class', 'y axis');
          $yAxis = $svg.select('.y.axis');
          transitionDuration = properties.transitionDuration.get();
          line = d3.svg.line().interpolate('basis').x(_.compose(x, xMap)).y(_.compose(y, yMap));
          $g.selectAll('path.line').data([data]).enter().append('path').attr('class', 'line');
          $g.selectAll('path.line').transition().duration(transitionDuration).ease("sin-in-out").attr('d', line);
          $xAxis.transition().duration(transitionDuration).call(xAxis);
          $yAxis.transition().duration(transitionDuration).call(yAxis);
          return null;
        });
      };
      null;
      chart = Property.expose(chart, properties);
      return chart;
    };
  });

}).call(this);
