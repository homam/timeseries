// Generated by CoffeeScript 1.6.2
(function() {
  d3.csv('charts/page-perf/data/sc50time.csv', function(data) {
    var dateRange, graphData, groups, msInaDay, parseDate;

    parseDate = d3.time.format("%m/%d/%Y").parse;
    data = data.map(function(d) {
      d.day = parseDate(d.day);
      d.visits = +d.visits;
      d.subs = +d.subs;
      d.conv = d.subs > 0 ? d.visits / d.subs : 0;
      return d;
    });
    groups = _(data).chain().filter(function(d) {
      return !!d.page && 'NULL' !== d.page;
    }).groupBy(function(d) {
      return d.page;
    }).value();
    dateRange = d3.extent(data.map(function(d) {
      return d.day;
    }));
    msInaDay = 24 * 60 * 60 * 1000;
    _.keys(groups).forEach(function(key) {
      var day, group, i, index, _i, _ref, _ref1, _results;

      group = groups[key];
      index = -1;
      _results = [];
      for (i = _i = _ref = +dateRange[0], _ref1 = +dateRange[1]; msInaDay > 0 ? _i <= _ref1 : _i >= _ref1; i = _i += msInaDay) {
        ++index;
        day = new Date(i);
        if (!_(group).some(function(d) {
          return Math.abs(+d.day - +day) < 1000;
        })) {
          group.splice(index, 0, {
            page: key,
            day: day,
            visits: 0,
            subs: 0,
            conv: 0
          });
          _results.push(groups[key] = group);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    });
    graphData = _.keys(groups).map(function(page) {
      return {
        key: page,
        values: groups[page],
        sum: groups[page].map(function(d) {
          return d.visits;
        }).reduce(function(a, b) {
          return a + b;
        })
      };
    });
    graphData = graphData.filter(function(d) {
      return d.sum > 14000;
    });
    console.log(graphData);
    return nv.addGraph(function() {
      var $svg, chart;

      chart = nv.models.stackedAreaChart().x(function(d) {
        return d.day;
      }).y(function(d) {
        return d.visits;
      }).clipEdge(true).tooltipContent(function(key, day, e, graph) {
        return key + "<br/>Visits=" + e + "<br/>Subs=" + graph.point.subs;
      });
      chart.xAxis.tickFormat(function(d) {
        return d3.time.format('%x')(new Date(d));
      });
      chart.yAxis.tickFormat(d3.format('0,.2f'));
      $svg = d3.select('#chart').append('svg').attr('height', 400);
      $svg.datum(graphData).transition().duration(1500).call(chart);
      return nv.utils.windowResize(chart.update);
    });
  });

}).call(this);
