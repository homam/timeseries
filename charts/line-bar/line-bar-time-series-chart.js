// Generated by CoffeeScript 1.6.2
(function() {
  var exports;

  exports = exports != null ? exports : this;

  exports.lineBarTimeSeriesChart = function() {
    var X, Y, Yb, chart, height, line, margin, width, xBScale, xMap, xScale, yBMap, yBScale, yMap, yScale;

    margin = {
      top: 20,
      right: 40,
      bottom: 20,
      left: 50
    };
    width = 720;
    height = 300;
    xMap = function(d) {
      return d[0];
    };
    yMap = function(d) {
      return d[1];
    };
    yBMap = function(d) {
      return d[1];
    };
    xScale = d3.time.scale();
    yScale = d3.scale.linear();
    yBScale = d3.scale.linear();
    xBScale = d3.scale.ordinal();
    X = function(d) {
      return xScale(xMap(d));
    };
    Y = function(d) {
      return yScale(yMap(d));
    };
    Yb = function(d) {
      return yBScale(yBMap(d));
    };
    line = d3.svg.line().interpolate('basis').x(X).y(Y);
    chart = function(selection) {
      return selection.each(function(raw) {
        var $svg, xAxis, yAxis, yBAxis;

        xScale.range([0, width - margin.left - margin.right]);
        yScale.range([height - margin.top - margin.bottom, 0]);
        xBScale.rangeRoundBands([0, width - margin.left - margin.right], .2);
        yBScale.range([height - margin.top - margin.bottom, 0]);
        xAxis = d3.svg.axis().scale(xScale).orient('bottom').tickSize(-height + margin.top + margin.bottom, 0, 0);
        yAxis = d3.svg.axis().scale(yScale).orient('left').tickSize(-width + margin.left + margin.right, 0, 0);
        yBAxis = d3.svg.axis().scale(yBScale).orient('right');
        $svg = d3.select(this).append('svg').attr('width', width).attr('height', height).append('g').attr('transform', "translate(" + margin.left + "," + margin.top + ")");
        $svg.append('g').attr('class', 'x axis');
        $svg.select('.x.axis').attr('transform', 'translate(0, ' + (height - margin.top - margin.bottom) + ')');
        $svg.append('g').attr('class', 'y axis line');
        $svg.select('.y.axis.line').append('text').attr('transform', 'translate(20,0) rotate(90)').attr('y', 6).attr('dy', '.71em').style('text-anchor', 'start').text('Y');
        $svg.append('g').attr('class', 'y axis bar').attr('transform', 'translate(' + (width - margin.right - margin.left) + ',0)').attr('opacity', 0);
        $svg.select('.y.axis.bar').append('text').attr('transform', 'translate(0,0) rotate(90)').attr('y', 6).attr('dy', '.71em').style('text-anchor', 'start').text('Y');
        chart.xScale = function(extent) {
          xScale.domain(extent, xMap);
          return $svg.select('.x.axis').transition().duration(1500).ease("sin-in-out").call(xAxis);
        };
        chart.yScale = function(extent, label) {
          yScale.domain(extent, yMap);
          $svg.select('.y.axis.line').transition().duration(1500).ease("sin-in-out").call(yAxis);
          return $svg.select('.y.axis.line > text').text(label != null ? label : '');
        };
        chart.yBScale = function(extent, label) {
          yBScale.domain(extent, yBMap);
          $svg.select('.y.axis.bar').transition().duration(1500).ease('sin-in-out').attr('opacity', 1).call(yBAxis);
          return $svg.select('.y.axis.bar > text').text(label != null ? label : '');
        };
        chart.addLine = function(newData) {
          $svg.selectAll('path.line').data([newData]).enter().append('path').attr('class', 'line');
          return $svg.selectAll('path.line').transition().duration(1500).ease("sin-in-out").attr('d', line);
        };
        return chart.addBar = function(newData) {
          xBScale.domain(newData.map(function(d) {
            return xMap(d);
          }));
          $svg.selectAll('rect.bar').data(newData).enter().append('rect').attr('class', 'bar');
          return $svg.selectAll('rect.bar').attr('width', xBScale.rangeBand()).transition().duration(1500).ease("sin-in-out").attr('x', X).attr('y', Yb).attr('height', function(d) {
            return height - margin.top - margin.bottom - Yb(d);
          });
        };
      });
    };
    chart.x = function(map) {
      xMap = map != null ? map : xMap;
      return chart;
    };
    chart.y = function(map) {
      yMap = map != null ? map : yMap;
      return chart;
    };
    chart.yB = function(map) {
      yBMap = map != null ? map : yBMap;
      return chart;
    };
    chart.height = function(val) {
      height = val != null ? val : height;
      return chart;
    };
    return chart;
  };

}).call(this);
