// Generated by CoffeeScript 1.6.3
(function() {
  var cumulativeMovingAverage, exports;

  exports = exports != null ? exports : this;

  cumulativeMovingAverage = function(map) {
    var sum;
    sum = 0;
    return function(d, i) {
      sum += map(d);
      return sum / (i + 1);
    };
  };

  exports.timeSeriesChart = function() {
    var X, Y, chart, height, line, margin, width, xAxis, xScale, xValue, yScale, yValue;
    margin = {
      top: 20,
      right: 20,
      bottom: 20,
      left: 20
    };
    width = 720;
    height = 300;
    xValue = function(d) {
      return d[0];
    };
    yValue = function(d) {
      return d[1];
    };
    xScale = d3.time.scale();
    yScale = d3.scale.linear();
    X = function(d) {
      return xScale(d[0]);
    };
    Y = function(d) {
      return yScale(d[1]);
    };
    xAxis = d3.svg.axis().scale(xScale).orient('bottom').tickSize(6, 0);
    line = d3.svg.line().x(X).y(Y);
    chart = function(selection) {
      return selection.each(function(raw) {
        var data, g, gEnter, path, svg;
        data = raw.map(function(d, i) {
          return [xValue.call(raw, d, i), yValue.call(raw, d, i)];
        });
        xScale.domain(d3.extent(data, function(d) {
          return d[0];
        }));
        xScale.range([0, width - margin.left - margin.right]);
        yScale.domain(d3.extent(data, function(d) {
          return d[1];
        }));
        yScale.range([height - margin.top - margin.bottom, 0]);
        svg = d3.select(this).selectAll('svg').data([data]);
        gEnter = svg.enter().append('svg').append('g');
        gEnter.append('path').attr('class', 'line');
        gEnter.append('g').attr('class', 'x axis');
        svg.attr('width', width);
        svg.attr('height', height);
        g = svg.select('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
        g.select('.x.axis').attr('transform', 'translate(0, ' + (height - margin.top - margin.bottom) + ')').call(xAxis);
        path = g.select('.line');
        return path.transition().attr('d', line);
      });
    };
    chart.margin = function(value) {
      margin = value != null ? value : margin;
      return chart;
    };
    chart.width = function(value) {
      width = value != null ? value : width;
      return chart;
    };
    chart.height = function(value) {
      height = value != null ? value : height;
      return chart;
    };
    chart.x = function(map) {
      xValue = map != null ? map : xValue;
      return chart;
    };
    chart.y = function(map) {
      yValue = map != null ? map : yValue;
      return chart;
    };
    return chart;
  };

}).call(this);
