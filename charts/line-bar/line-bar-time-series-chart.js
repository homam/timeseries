// Generated by CoffeeScript 1.6.2
(function() {
  var exports;

  exports = exports != null ? exports : this;

  exports.lineBarTimeSeriesChart = function() {
    var X, Xb, Y, Yb, chart, height, line, margin, width, xAxis, xBScale, xMap, xScale, yAxis, yBMap, yBScale, yMap, yScale;

    margin = {
      top: 20,
      right: 20,
      bottom: 20,
      left: 50
    };
    width = 720;
    height = 300;
    xMap = function(d) {
      return d[0];
    };
    yMap = function(d) {
      return d[1];
    };
    yBMap = function(d) {
      return d[1];
    };
    X = function(d) {
      return xScale(xMap(d));
    };
    Y = function(d) {
      return yScale(yMap(d));
    };
    Xb = function(d) {
      return xBScale(xMap(d));
    };
    Yb = function(d) {
      return yBScale(yBMap(d));
    };
    xScale = d3.time.scale().range([0, width - margin.left - margin.right]);
    yScale = d3.scale.linear().range([height - margin.top - margin.bottom, 0]);
    xBScale = d3.scale.ordinal().rangeRoundBands([0, width - margin.left - margin.right], .2);
    yBScale = d3.scale.linear().range([height - margin.top - margin.bottom, 0]);
    xAxis = d3.svg.axis().scale(xScale).orient('bottom');
    yAxis = d3.svg.axis().scale(yScale).orient('left');
    line = d3.svg.line().interpolate('basis').x(X).y(Y);
    chart = function(selection) {
      return selection.each(function(raw) {
        var $svg;

        $svg = d3.select(this).append('svg').attr('width', width).attr('height', height).append('g').attr('transform', "translate(" + margin.left + "," + margin.top + ")");
        $svg.append('g').attr('class', 'x axis');
        $svg.append('g').attr('class', 'y axis');
        $svg.select('.x.axis').attr('transform', 'translate(0, ' + (height - margin.top - margin.bottom) + ')').call(xAxis);
        $svg.select('.y.axis').call(yAxis).append('text').attr('transform', 'rotate(0)').attr('y', 6).attr('dy', '.71em').style('text-anchor', 'end').text('Y');
        chart.xScale = function(extent) {
          xScale.domain(extent, xMap);
          return $svg.select('.x.axis').transition().duration(1500).ease("sin-in-out").call(xAxis);
        };
        chart.yScale = function(extent) {
          yScale.domain(extent, yMap);
          return $svg.select('.y.axis').transition().duration(1500).ease("sin-in-out").call(yAxis);
        };
        chart.yBScale = function(extent) {
          return yBScale.domain(extent, yBMap);
        };
        chart.addLine = function(newData) {
          $svg.selectAll('path.line').data([newData]).enter().append('path').attr('class', 'line');
          return $svg.selectAll('path.line').transition().duration(1500).ease("sin-in-out").attr('d', line);
        };
        return chart.addBar = function(newData) {
          xBScale.domain(newData.map(function(d) {
            return xMap(d);
          }));
          console.log(Xb(new Date(2013, 3, 1)));
          $svg.selectAll('rect.bar').data(newData).enter().append('rect').attr('class', 'bar');
          return $svg.selectAll('rect.bar').attr('width', xBScale.rangeBand()).transition().duration(1500).ease("sin-in-out").attr('x', X).attr('y', Yb).attr('height', function(d) {
            return height - margin.top - margin.bottom - Yb(d);
          });
        };
      });
    };
    chart.x = function(map) {
      xMap = map != null ? map : xMap;
      return chart;
    };
    chart.y = function(map) {
      yMap = map != null ? map : yMap;
      return chart;
    };
    chart.yB = function(map) {
      yBMap = map != null ? map : yBMap;
      return chart;
    };
    return chart;
  };

}).call(this);
